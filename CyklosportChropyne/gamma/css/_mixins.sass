=vendor-prefix($name, $value) 
  @each $vendor in ('-webkit-', '-moz-', '-ms-', '-o-', '') 
    #{$vendor}#{$name}: #{$value}
=more-vendor-prefix($name, $value1, $value2) 
  @each $vendor in ('-webkit-', '-moz-', '-ms-', '-o-', '') 
    #{$vendor}#{$name}: #{$value1}, #{$value2}

=keyframes($name)
  @-webkit-keyframes #{$name}
    @content
  @-moz-keyframes #{$name}
    @content
  @-ms-keyframes #{$name}
    @content
  @keyframes #{$name}
    @content
@mixin display($value) 
  // flex | inline-flex
  @if $value == "flex" 
    // 2009
    display: -webkit-box
    display: -moz-box
    display: box

    // 2012
    display: -webkit-flex
    display: -moz-flex
    display: -ms-flexbox // 2011 (IE 10)
    display: flex
  @else if $value == "inline-flex" 
    display: -webkit-inline-box
    display: -moz-inline-box
    display: inline-box

    display: -webkit-inline-flex
    display: -moz-inline-flex
    display: -ms-inline-flexbox
    display: inline-flex
  @else
    display: $value

// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)
// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)
@mixin align-self($value: auto) 

  $value-2011: $value
  @if $value == "flex-start" 
    $value-2011: start
  @else if $value == "flex-end" 
    $value-2011: end
  

  // 2012
  @include prefixer(align-self, $value, webkit moz spec)

  // 2011 (IE 10)
  -ms-flex-item-align: $value-2011


// 2009 - box-align (start | end | center | baseline | stretch)
// 2011 - flex-align (start | end | center | baseline | stretch)
// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)
@mixin align-items($value: stretch) 

  $alt-value: $value

  @if $value == "flex-start" 
    $alt-value: start
  @else if $value == "flex-end" 
    $alt-value: end
  

  // 2009
  @include prefixer(box-align, $alt-value, webkit moz spec)

  // 2012
  @include prefixer(align-items, $value, webkit moz ms o spec)

  // 2011 (IE 10)
  -ms-flex-align: $alt-value


@mixin flex-direction($value: row) 

  // Alt values.
  $value-2009: $value
  $value-2011: $value
  $direction: normal

  @if $value == row 
    $value-2009: horizontal
  @else if $value == "row-reverse" 
    $value-2009: horizontal
    $direction: reverse
  @else if $value == column 
    $value-2009: vertical
  @else if $value == "column-reverse" 
    $value-2009: vertical
    $direction: reverse
  

  // 2009
  @include prefixer(box-orient, $value-2009, webkit moz spec)
  @include prefixer(box-direction, $direction, webkit moz spec)

  // 2012
  @include prefixer(flex-direction, $value, webkit moz spec)

  // 2011 (IE 10)
  -ms-flex-direction: $value



=flex($values) 
  -webkit-box-flex: $values
  -moz-box-flex:  $values
  -webkit-flex:  $values
  -ms-flex:  $values
  flex:  $values


=order($val) 
  -webkit-box-ordinal-group: $val 
  -moz-box-ordinal-group: $val    
  -ms-flex-order: $val     
  -webkit-order: $val  
  order: $val

// use of keyframes mixin
// +keyframes(bgcolor)
// 	0%
// 		background-color: #ffccf2
// 	50%
// 		background-color: #ccffcc
// 	100%
// 		background-color: #ccffff


// use of keyframes mixin
// 2009 - box-lines (single | multiple)
// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)
// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)
@mixin flex-wrap($value: nowrap) 
  // Alt values
  $alt-value: $value
  @if $value == nowrap 
    $alt-value: single
  @else if $value == wrap 
    $alt-value: multiple
  @else if $value == "wrap-reverse" 
    $alt-value: multiple
  

  @include prefixer(box-lines, $alt-value, webkit moz spec)
  @include prefixer(flex-wrap, $value, webkit moz ms spec)

// 2009 - box-pack (start | end | center | justify)
// 2011 - flex-pack (start | end | center | justify)
// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)
@mixin justify-content($value: flex-start) 

  // Alt values.
  $alt-value: $value
  @if $value == "flex-start" 
    $alt-value: start
  @else if $value == "flex-end"
    $alt-value: end
  @else if $value == "space-between" 
    $alt-value: justify
  @else if $value == "space-around" 
    $alt-value: distribute
  

  // 2009
  @include prefixer(box-pack, $alt-value, webkit moz spec)

  // 2012
  @include prefixer(justify-content, $value, webkit moz ms o spec)

  // 2011 (IE 10)
  -ms-flex-pack: $alt-value


// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)
// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)
@mixin align-content($value: stretch) 

  $value-2011: $value
  @if $value == "flex-start" 
    $value-2011: start
  @else if $value == "flex-end" 
    $value-2011: end
  @else if $value == "space-between" 
    $value-2011: justify
  @else if $value == "space-around" 
    $value-2011: distribute


  // 2012
  @include prefixer(align-content, $value, webkit moz spec)

  // 2011 (IE 10)
  -ms-flex-line-pack: $value-2011

// 2009 - box-ordinal-group (integer)
// 2011 - flex-order (integer)
// 2012 - order (integer)
@mixin order($int: 0) 
  // 2009
  @include prefixer(box-ordinal-group, $int, webkit moz spec)

  // 2012
  @include prefixer(order, $int, webkit moz spec)

  // 2011 (IE 10)
  -ms-flex-order: $int
@mixin screenHeight($res-min, $res-max, $orientation: false) 
  @if $orientation 
    @media only screen and (min-height: $res-min) and (max-height: $res-max) and (orientation:#{$orientation}) 
      @content
  @else 
    @media only screen and (min-height: $res-min) and (max-height: $res-max) 
      @content
@mixin screen($res-min, $res-max, $orientation: false) 
  @if $orientation 
    @media only screen and (min-width: $res-min) and (max-width: $res-max) and (orientation:#{$orientation}) 
      @content
  @else 
    @media only screen and (min-width: $res-min) and (max-width: $res-max) 
      @content
@mixin desktop($min-device-width)
  @media only screen and (min-device-width: $min-device-width)
    @content

@mixin mobile($max-device-width)
  @media only screen and (max-device-width: $max-device-width)
    @content

@mixin _orientation($orientation) 
  @media screen and (orientation: $orientation) 
    @content

@mixin portrait() 
  @include _orientation(portrait) 
    @content
$prefix-for-webkit:    true !default
$prefix-for-mozilla:   true !default
$prefix-for-microsoft: true !default
$prefix-for-opera:     true !default
$prefix-for-spec:      true !default

=prefixer($property, $value, $prefixes) 
  @each $prefix in $prefixes 
    @if $prefix == webkit 
      @if $prefix-for-webkit 
        -webkit-#{$property}: $value
      
    @else if $prefix == moz 
      @if $prefix-for-mozilla 
        -moz-#{$property}: $value
      
    @else if $prefix == ms 
      @if $prefix-for-microsoft 
        -ms-#{$property}: $value
      
    @else if $prefix == o 
      @if $prefix-for-opera 
        -o-#{$property}: $value
      
    @else if $prefix == spec 
      @if $prefix-for-spec 
        #{$property}: $value
      
    @else  
      @warn "Unrecognized prefix: #{$prefix}"
@mixin placeholder($value)
  ::-webkit-input-placeholder 
    color: $value
  :-moz-placeholder
    color: $value
  ::-moz-placeholder
    color: $value
  :-ms-input-placeholder
    color: $value  

* 
  +vendor-prefix('box-sizing', 'border-box')
